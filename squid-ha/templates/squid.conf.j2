#
# Recommended minimum configuration:
#

# Example rule allowing access from your local networks.
# Adapt to list your (internal) IP networks from where browsing
# should be allowed
{% for net in localnets %}
acl localnet src {{net}}
{% endfor %}


{% for port in ssl_ports %}
acl SSL_ports port {{ port }}
{% endfor %}

{% for port in safe_ports %}
acl Safe_ports port {{ port }}
{% endfor %}

acl CONNECT method CONNECT
acl NoSSLIntercept ssl::server_name_regex -i "/etc/squid/tunneled.txt"
acl whitelisted ssl::server_name "/etc/squid/whitelisted.txt"
acl whitelisted_http dstdomain "/etc/squid/whitelisted.txt"
acl whitelisted_tunneled dstdomain "/etc/squid/tunneled.txt"
acl BrokenButTrustedServers dstdomain "/etc/squid/broken-but-trusted.txt"
acl DomainMismatch ssl_error SQUID_X509_V_ERR_DOMAIN_MISMATCH

#
# Recommended minimum Access Permission configuration:
#
# Deny requests to certain unsafe ports
http_access allow localnet Safe_ports
http_access allow localhost Safe_ports
http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
http_access allow localnet SSL_ports
http_access allow localhost SSL_ports
http_access deny CONNECT !SSL_ports

# Only allow cachemgr access from localhost
http_access allow localhost manager
http_access deny manager

# We strongly recommend the following be uncommented to protect innocent
# web applications running on the proxy server who think the only
# one who can access services on "localhost" is a local user
# http_access deny to_localhost

#
# INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS
#

# Example rule allowing access from your local networks.
# Adapt localnet in the ACL section to list your (internal) IP networks
# from where browsing should be allowed
http_access allow localhost

{% if use_whitelist %}
http_access allow localnet whitelisted_http
http_access allow localnet whitelisted_tunneled
{% else %}
http_access allow localnet
{% endif %}

http_access deny all

# And finally deny all other access to this proxy
http_access deny all

sslcrtd_program /usr/lib64/squid/security_file_certgen -s {{ ssl_db_dir_var }} -M 4MB

http_port {{ control_port }}

http_port {{ http_port }} intercept
https_port {{ https_port }} intercept ssl-bump tls-cert={{ca_destination}}/{{ca_file_name}} generate-host-certificates=on dynamic_cert_mem_cache_size=4MB

sslproxy_cert_error allow BrokenButTrustedServers DomainMismatch
sslproxy_cert_error deny all

acl step1 at_step SslBump1
ssl_bump splice NoSSLIntercept
ssl_bump peek step1
{% if use_whitelist %}
ssl_bump terminate !whitelisted
{% endif %}
ssl_bump {{ intercept_method }} all

{% if use_cache_peer and peer_hostname %}

cache_peer {{ peer_hostname }} parent {{ peer_http_port }} 0 no-query no-digest {% if peer_username %}login={{peer_username}}:{{peer_password}}{% endif %}

never_direct allow all
{% endif %}

# Uncomment and adjust the following to add a disk cache directory.
#cache_dir ufs /var/spool/squid 100 16 256

# Leave coredumps in the first cache dir
coredump_dir /var/spool/squid

#
# Add any of your own refresh_pattern entries above these.
#
refresh_pattern ^ftp:           1440    20%     10080
refresh_pattern ^gopher:        1440    0%      1440
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0
refresh_pattern .               0       20%     4320
